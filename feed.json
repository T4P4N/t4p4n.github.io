{
    "version": "https://jsonfeed.org/version/1",
    "title": "T4P4N",
    "home_page_url": "https://t4p4n.github.io/",
    "feed_url": "https://t4p4n.github.io/feed.json",
    "description": "I'm Tapan Kashyap. Welcome to my personal space on the internet.",
    "icon": "https://t4p4n.github.io/apple-touch-icon.png",
    "favicon": "https://t4p4n.github.io/favicon.ico",
    "expired": false,
    
    "author":  {
        "name": "Tapan Kashyap",
        "url": null,
        "avatar": null
    },
    
"items": [
    
        {
            "id": "https://t4p4n.github.io/2022/08/13/short-term-goals",
            "title": "short term goals are important (rails)",
            "summary": null,
            "content_text": "Short Term Goals!!!!! (Rails)Let’s start by defining what short term goal isits a achievable in short duration i.e within days or months for example learning ruby on railsCreate  like something a todo/blog app just to get a hint of how things work in rails  but only do this you haven’t work with MVC architecture before.  Otherwise build something that uses some more framework specific features like rails helpers &amp; concerns or other features specific to your project.Modify  Read Code &amp; Do incremental changes  Take notes with pen &amp; paper, also try drawing relationship b/w two or models.Observe  Inspect generated migrations &amp; schema  Inspect db after migrations &amp; also after seeding  Read server logs &amp; add print/puts statements in controllers it will give you a more clear idea about things are working internally.Watch &amp; Read  Watch videos about rails on YT checklout deanin , super rails, jesus castello railscasts etc.  Read blogs, checkout saeloun, big binary, Ruby Guides, also checkout learn rails 6 by adam notodikromo if you’re into books(like me)  Read rails guide.Write &amp; Debug  don’t be afraid to mess things up  but if you did made a mess &amp; it works  then its responsiblity to clean it up  PS: you can write spaghetti code but also refactor it as much as possible.  Do trial &amp; error very important",
            "content_html": "<h2 id=\"short-term-goals-rails\">Short Term Goals!!!!! (Rails)</h2><p>Let’s start by defining what short term goal isits a achievable in short duration i.e within days or months for example learning ruby on rails</p><h3 id=\"create\">Create</h3><ul>  <li>like something a todo/blog app just to get a hint of how things work in rails</li>  <li>but only do this you haven’t work with MVC architecture before.</li>  <li>Otherwise build something that uses some more framework specific features like rails helpers &amp; concerns or other features specific to your project.</li></ul><h3 id=\"modify\">Modify</h3><ul>  <li>Read Code &amp; Do incremental changes</li>  <li>Take notes with pen &amp; paper, also try drawing relationship b/w two or models.</li></ul><h3 id=\"observe\">Observe</h3><ul>  <li>Inspect generated migrations &amp; schema</li>  <li>Inspect db after migrations &amp; also after seeding</li>  <li>Read server logs &amp; add print/puts statements in controllers it will give you a more clear idea about things are working internally.</li></ul><h3 id=\"watch--read\">Watch &amp; Read</h3><ul>  <li>Watch videos about rails on YT checklout deanin , super rails, jesus castello railscasts etc.</li>  <li>Read blogs, checkout saeloun, big binary, Ruby Guides, also checkout learn rails 6 by adam notodikromo if you’re into books(like me)</li>  <li>Read rails guide.</li></ul><h3 id=\"write--debug\">Write &amp; Debug</h3><ul>  <li>don’t be afraid to mess things up</li>  <li>but if you did made a mess &amp; it works</li>  <li>then its responsiblity to clean it up</li>  <li>PS: you can write spaghetti code but also refactor it as much as possible.</li>  <li>Do trial &amp; error very important</li></ul>",
            "url": "https://t4p4n.github.io/2022/08/13/short-term-goals",
            
            
            
            "tags": ["goals","rails","ruby","ror","ruby on rails"],
            
            "date_published": "2022-08-13T00:00:00+05:30",
            "date_modified": "2022-08-13T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2022/05/30/reverse-array",
            "title": "Reverse a Array",
            "summary": "Reverse a array of given items",
            "content_text": "def reverse_array(arr):\ti, j = 0, len(arr) - 1\twhile i &lt; j:\t\tarr[i], arr[j] = arr[j], arr[i]\t\ti += 1\t\tj -= 1\treturn arrarr = [0,1,2,3,4,5,6,7,8,9,10]reverse_arr(arr)# [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]  Code is fairly simple to understand give it a try  Else just Google it.Thanks for reading :)",
            "content_html": "<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">reverse_array</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">):</span>\t<span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">j</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span> <span class=\"o\">-</span> <span class=\"mi\">1</span>\t<span class=\"k\">while</span> <span class=\"n\">i</span> <span class=\"o\">&lt;</span> <span class=\"n\">j</span><span class=\"p\">:</span>\t\t<span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">],</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">j</span><span class=\"p\">],</span> <span class=\"n\">arr</span><span class=\"p\">[</span><span class=\"n\">i</span><span class=\"p\">]</span>\t\t<span class=\"n\">i</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\t\t<span class=\"n\">j</span> <span class=\"o\">-=</span> <span class=\"mi\">1</span>\t<span class=\"k\">return</span> <span class=\"n\">arr</span><span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">,</span><span class=\"mi\">8</span><span class=\"p\">,</span><span class=\"mi\">9</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">]</span><span class=\"n\">reverse_arr</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">)</span><span class=\"c1\"># [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]</span></code></pre></div></div><ul>  <li>Code is fairly simple to understand give it a try</li>  <li>Else just Google it.</li></ul><h5 id=\"thanks-for-reading-\">Thanks for reading :)</h5>",
            "url": "https://t4p4n.github.io/2022/05/30/reverse-array",
            
            
            
            "tags": ["reverse","array,","array,","reverse,","algorithms"],
            
            "date_published": "2022-05-30T00:00:00+05:30",
            "date_modified": "2022-05-30T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2022/05/29/fizzbuzz",
            "title": "FizzBuzz",
            "summary": "Implementing fizzbuzz using python",
            "content_text": "problem statement:  print fizz if the number is divisble by 3  print buzz if the number is divisble by 5  print fizzbuzz if the number is divisble by both 3 &amp; 5  else just print the number.def fizzbuzz(n):    for i in range(1, n+1):        if i % 3 == 0 and i % 5 == 0:            print(\"FizzBuzz\")        elif i % 3 == 0:            print(\"Fizz\")        elif i % 5 == 0:            print(\"Buzz\")        else:            print(i)n = int(input(\"&gt; \"))fizzbuzz(n)  Code is fairly simple to understand give it a try  Else just Google it.Thanks for reading :)",
            "content_html": "<h3 id=\"problem-statement\">problem statement:</h3><ul>  <li>print fizz if the number is divisble by 3</li>  <li>print buzz if the number is divisble by 5</li>  <li>print fizzbuzz if the number is divisble by both 3 &amp; 5</li>  <li>else just print the number.</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">fizzbuzz</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>    <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">):</span>        <span class=\"k\">if</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"ow\">and</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">5</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"FizzBuzz\"</span><span class=\"p\">)</span>        <span class=\"k\">elif</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">3</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Fizz\"</span><span class=\"p\">)</span>        <span class=\"k\">elif</span> <span class=\"n\">i</span> <span class=\"o\">%</span> <span class=\"mi\">5</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Buzz\"</span><span class=\"p\">)</span>        <span class=\"k\">else</span><span class=\"p\">:</span>            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span><span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"&gt; \"</span><span class=\"p\">))</span><span class=\"n\">fizzbuzz</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span></code></pre></div></div><ul>  <li>Code is fairly simple to understand give it a try</li>  <li>Else just Google it.</li></ul><h5 id=\"thanks-for-reading-\">Thanks for reading :)</h5>",
            "url": "https://t4p4n.github.io/2022/05/29/fizzbuzz",
            
            
            
            "tags": ["fizzbuzz,","math,","string,","algorithms"],
            
            "date_published": "2022-05-29T00:00:00+05:30",
            "date_modified": "2022-05-29T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2022/05/28/caesar-cipher",
            "title": "Caesar Cipher",
            "summary": "Implementing caesar cipher using python",
            "content_text": "  Try to implement caesar cipher using plain python.def cipher(a_string, key):    uppercase = ABCDEFGHIJKLMNOPQRSTUVWXYZ    lowercase = abcdefghijklmnopqrstuvwxyz    encrypt = ''    for x in a_string:        if x in uppercase:            print(uppercase.index(x))            # (1)            new = (uppercase.index(x) + key) % 26\t\t\t# (2)            encrypt += uppercase[new]        elif x in lowercase:            print(lowercase.index(x))            new = (lowercase.index(x) + key) % 26            encrypt += lowercase[new]        else:            encrypt += x    print(\"Cipher text: \", encrypt)    return encrypta_string = input(\"Enter a name\")key = input(\"Enter a key (must be integer) \")cipher(a_string, int(key))How it works  (1) if the letter is uppercase we get index of it and add key to it.  (1.1) and then we use modulus operator(which return either 0 or remainder) with 26 as divisor  (1.2) we treat new as new index of letter  (2) then we append to encrypt variable with the new index of letter.Can’t understand what i wrote here?  Go ahead and look it on internet  here some links to resources  Caesar Cipher  Modolus OperatorThanks for reading :)",
            "content_html": "<p><a href=\"https://commons.wikimedia.org/wiki/File:Siege-alesia-vercingetorix-jules-cesar.jpg\" title=\"Lionel Royer, Public domain, via Wikimedia Commons\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Siege-alesia-vercingetorix-jules-cesar.jpg/512px-Siege-alesia-vercingetorix-jules-cesar.jpg\" alt=\"Siege-alesia-vercingetorix-jules-cesar\" /></a></p><ul>  <li>Try to implement caesar cipher using plain python.</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">cipher</span><span class=\"p\">(</span><span class=\"n\">a_string</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>    <span class=\"n\">uppercase</span> <span class=\"o\">=</span> <span class=\"n\">ABCDEFGHIJKLMNOPQRSTUVWXYZ</span>    <span class=\"n\">lowercase</span> <span class=\"o\">=</span> <span class=\"n\">abcdefghijklmnopqrstuvwxyz</span>    <span class=\"n\">encrypt</span> <span class=\"o\">=</span> <span class=\"s\">''</span>    <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">a_string</span><span class=\"p\">:</span>        <span class=\"k\">if</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">uppercase</span><span class=\"p\">:</span>            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">uppercase</span><span class=\"p\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>            <span class=\"c1\"># (1)</span>            <span class=\"n\">new</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">uppercase</span><span class=\"p\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">26</span>\t\t\t<span class=\"c1\"># (2)</span>            <span class=\"n\">encrypt</span> <span class=\"o\">+=</span> <span class=\"n\">uppercase</span><span class=\"p\">[</span><span class=\"n\">new</span><span class=\"p\">]</span>        <span class=\"k\">elif</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">lowercase</span><span class=\"p\">:</span>            <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">lowercase</span><span class=\"p\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>            <span class=\"n\">new</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">lowercase</span><span class=\"p\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">key</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">26</span>            <span class=\"n\">encrypt</span> <span class=\"o\">+=</span> <span class=\"n\">lowercase</span><span class=\"p\">[</span><span class=\"n\">new</span><span class=\"p\">]</span>        <span class=\"k\">else</span><span class=\"p\">:</span>            <span class=\"n\">encrypt</span> <span class=\"o\">+=</span> <span class=\"n\">x</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Cipher text: \"</span><span class=\"p\">,</span> <span class=\"n\">encrypt</span><span class=\"p\">)</span>    <span class=\"k\">return</span> <span class=\"n\">encrypt</span><span class=\"n\">a_string</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"Enter a name\"</span><span class=\"p\">)</span><span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"Enter a key (must be integer) \"</span><span class=\"p\">)</span><span class=\"n\">cipher</span><span class=\"p\">(</span><span class=\"n\">a_string</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">))</span></code></pre></div></div><h3 id=\"how-it-works\">How it works</h3><ul>  <li>(1) if the letter is uppercase we get index of it and add key to it.</li>  <li>(1.1) and then we use modulus operator(which return either 0 or remainder) with 26 as divisor</li>  <li>(1.2) we treat new as new index of letter</li>  <li>(2) then we append to encrypt variable with the new index of letter.</li></ul><h3 id=\"cant-understand-what-i-wrote-here\">Can’t understand what i wrote here?</h3><ul>  <li>Go ahead and look it on internet</li>  <li>here some links to resources</li>  <li><a href=\"https://en.wikipedia.org/wiki/Caesar_cipher\">Caesar Cipher</a></li>  <li><a href=\"https://en.wikipedia.org/wiki/Modulo_operation\">Modolus Operator</a></li></ul><h5 id=\"thanks-for-reading-\">Thanks for reading :)</h5>",
            "url": "https://t4p4n.github.io/2022/05/28/caesar-cipher",
            
            
            
            "tags": ["caesar,","cipher,","string,","algorithms"],
            
            "date_published": "2022-05-28T00:00:00+05:30",
            "date_modified": "2022-05-28T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2022/05/27/last-digits",
            "title": "Last digit !!!??",
            "summary": "Last Digit",
            "content_text": "Get last digit from a string  Example string: “Get 10% off on minimum cart value of $199”  Try to get only the last digit i.e. 9s1 = \"Get 10% off on minimum cart value of $199\"def last_digit(s1):\t# (1)\tdigits = [x for x in s1 if x.isdigit()]\t# (2)\tld = digits[-1]\t# (3)\tprint(ld)last_digit(s1)How it works  (1) use list comprehension to get all the digits from string  (2) get last element from list using string slicing with negative index.  (3) finally print the last digitThanks for reading :)",
            "content_html": "<h2 id=\"get-last-digit-from-a-string\">Get last digit from a string</h2><ul>  <li>Example string: “Get 10% off on minimum cart value of $199”</li>  <li>Try to get only the last digit i.e. 9</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">s1</span> <span class=\"o\">=</span> <span class=\"s\">\"Get 10% off on minimum cart value of $199\"</span><span class=\"k\">def</span> <span class=\"nf\">last_digit</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">):</span>\t<span class=\"c1\"># (1)</span>\t<span class=\"n\">digits</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">s1</span> <span class=\"k\">if</span> <span class=\"n\">x</span><span class=\"p\">.</span><span class=\"n\">isdigit</span><span class=\"p\">()]</span>\t<span class=\"c1\"># (2)</span>\t<span class=\"n\">ld</span> <span class=\"o\">=</span> <span class=\"n\">digits</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\t<span class=\"c1\"># (3)</span>\t<span class=\"k\">print</span><span class=\"p\">(</span><span class=\"n\">ld</span><span class=\"p\">)</span><span class=\"n\">last_digit</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">)</span></code></pre></div></div><h3 id=\"how-it-works\">How it works</h3><ul>  <li>(1) use list comprehension to get all the digits from string</li>  <li>(2) get last element from list using string slicing with negative index.</li>  <li>(3) finally print the last digit</li></ul><h5 id=\"thanks-for-reading-\">Thanks for reading :)</h5>",
            "url": "https://t4p4n.github.io/2022/05/27/last-digits",
            
            
            
            "tags": ["last_digits,","string,","algorithms"],
            
            "date_published": "2022-05-27T00:00:00+05:30",
            "date_modified": "2022-05-27T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2022/05/26/anagram-detection",
            "title": "Anagrams !?",
            "summary": "Anagrams detection using python",
            "content_text": "What is it !?  Its just a fancy term for saying:  letters from strings matches to letters of other string  Some examples:  seat eats  heart earth  shit hits  skin sink  altitude latitude  Python code for this type of programdef is_anagram(s1, s2):    s1=s1.replace(\" \", \"\").lower()    s2=s2.replace(\" \", \"\").lower()    if sorted(s1) == sorted(s2):        print(\"Yes\")    else:        print(\"Nope\")s1=input(\"&gt; \")s2=input(\"&gt; \")External Links:  AmbigramsThanks for reading :)",
            "content_html": "<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/3/33/Anagram_Listen_%3D_Silent.gif\" alt=\"Listen\" /></p><h2 id=\"what-is-it-\">What is it !?</h2><ul>  <li>Its just a fancy term for saying:</li>  <li>letters from strings matches to letters of other string</li>  <li>Some examples:</li>  <li>seat eats</li>  <li>heart earth</li>  <li>shit hits</li>  <li>skin sink</li>  <li>altitude latitude</li>  <li>Python code for this type of program</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"k\">def</span> <span class=\"nf\">is_anagram</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">,</span> <span class=\"n\">s2</span><span class=\"p\">):</span>    <span class=\"n\">s1</span><span class=\"o\">=</span><span class=\"n\">s1</span><span class=\"p\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">\" \"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">).</span><span class=\"n\">lower</span><span class=\"p\">()</span>    <span class=\"n\">s2</span><span class=\"o\">=</span><span class=\"n\">s2</span><span class=\"p\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"s\">\" \"</span><span class=\"p\">,</span> <span class=\"s\">\"\"</span><span class=\"p\">).</span><span class=\"n\">lower</span><span class=\"p\">()</span>    <span class=\"k\">if</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">s1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">s2</span><span class=\"p\">):</span>        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Yes\"</span><span class=\"p\">)</span>    <span class=\"k\">else</span><span class=\"p\">:</span>        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Nope\"</span><span class=\"p\">)</span><span class=\"n\">s1</span><span class=\"o\">=</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"&gt; \"</span><span class=\"p\">)</span><span class=\"n\">s2</span><span class=\"o\">=</span><span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"&gt; \"</span><span class=\"p\">)</span></code></pre></div></div><h4 id=\"external-links\">External Links:</h4><ul>  <li><a href=\"https://en.wikipedia.org/wiki/Ambigram\">Ambigrams</a></li></ul><h3 id=\"thanks-for-reading-\">Thanks for reading :)</h3>",
            "url": "https://t4p4n.github.io/2022/05/26/anagram-detection",
            
            
            
            "tags": ["anagram,","string,","algorithms"],
            
            "date_published": "2022-05-26T00:00:00+05:30",
            "date_modified": "2022-05-26T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2022/05/25/palindrome-python",
            "title": "Palindrome !?",
            "summary": "Palindrome detection using python",
            "content_text": "RotavatorPalindrome? What is it !?  Its just a fancy term for saying something like this:  string/integer matches to their reverse.  Example: POP equals to POP(reverse of pop)  Another example: madam equals to madam(reverse of madam)      Yet another example: Rotavator equals to rotvatoR(reverse of rotavator)    non-examples aka false statements:  “Hello world” equals to “dlrow olleH”      “definetly not” equals to “ton yltenifed”    Python code for this type of programdata = input(\"Enter something: \")def is_palindrome(data):    reverse = data[::-1]    if data == reverse:        print(\"Yes\")        return True    print(\"Nope\")    return Falseis_palindrome(data)  suggested improvements:  we can use manual function for string reversal  instead of using python slicling magic.Hope you learned something today atleast i did for sure.Thanks for reading :)",
            "content_html": "<h2 id=\"rotavator\">Rotavator</h2><p><img src=\"https://img2.exportersindia.com/product_images/bc-full/dir_10/289726/rotavator-1512462441-3497789.jpeg\" alt=\"Rotavator\" title=\"a rotavator\" /></p><h2 id=\"palindrome-what-is-it-\">Palindrome? What is it !?</h2><ul>  <li>Its just a fancy term for saying something like this:</li>  <li>string/integer matches to their reverse.</li>  <li>Example: POP equals to POP(reverse of pop)</li>  <li>Another example: madam equals to madam(reverse of madam)</li>  <li>    <p>Yet another example: Rotavator equals to rotvatoR(reverse of rotavator)</p>  </li>  <li>non-examples aka false statements:</li>  <li>“Hello world” equals to “dlrow olleH”</li>  <li>    <p>“definetly not” equals to “ton yltenifed”</p>  </li>  <li>Python code for this type of program</li></ul><div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s\">\"Enter something: \"</span><span class=\"p\">)</span><span class=\"k\">def</span> <span class=\"nf\">is_palindrome</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">):</span>    <span class=\"n\">reverse</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"p\">[::</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>    <span class=\"k\">if</span> <span class=\"n\">data</span> <span class=\"o\">==</span> <span class=\"n\">reverse</span><span class=\"p\">:</span>        <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Yes\"</span><span class=\"p\">)</span>        <span class=\"k\">return</span> <span class=\"bp\">True</span>    <span class=\"k\">print</span><span class=\"p\">(</span><span class=\"s\">\"Nope\"</span><span class=\"p\">)</span>    <span class=\"k\">return</span> <span class=\"bp\">False</span><span class=\"n\">is_palindrome</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span></code></pre></div></div><ul>  <li>suggested improvements:</li>  <li>we can use manual function for string reversal</li>  <li>instead of using python slicling magic.</li></ul><h3 id=\"hope-you-learned-something-today-atleast-i-did-for-sure\">Hope you learned something today atleast i did for sure.</h3><h3 id=\"thanks-for-reading-\">Thanks for reading :)</h3>",
            "url": "https://t4p4n.github.io/2022/05/25/palindrome-python",
            
            
            
            "tags": ["palindrome,","detection,","string,","algorithms,"],
            
            "date_published": "2022-05-25T00:00:00+05:30",
            "date_modified": "2022-05-25T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2021/12/24/education-rant",
            "title": "Education Rant",
            "summary": "How modern education system in india is a disaster.",
            "content_text": "Problems or (What &amp; Why?)??Why people are chasing success? What do they mean by success? is financial success is everything?  As of now in 2021's India Most people think success is getting a govt. job &amp; that's it!But I dont think so? is govt job is keep up to everything want in life? No, its just a secure jobwhile nothing is permanent in this world, they think are settled, but in real life, nobody gets settledafter getting, we gotta repeat same things almost daily, and repetition is equal to boredom.  From my perespective i think life is about balacing all aspects of human a beings' life,I mean keeping everything balanced from work life to social life, childhood to parenthood, physical health to mental health everything needs to balanced, While our education system only teachs about how to get a job, not how to live a life.  Anyways here are some problems that i faced/found in our current indian education system while i was studying commerce from school &amp;  college.Irrelevant subjects  Like Business &amp; Industerial Laws, Hindi Language. This subject must be relevant to Law/Hindi specialization students only.  However these subjects can be recommended &amp; but not mandatory to study (Optionally any one can look it up on internet, if they want to).Out of date syllabus/circicullum  In modern day society accounting is mostly done through computers. But they dont teach us about computers  They dont teach us about Book Keeping softwares like Busy, Tally etc.  &amp; Even Nowadays from manufacturing to selling products or services whether they are tangible or intangible.  Are Now being done with the help of computers, E.g. Product design using solidworks, IoT devices to Aid in manufacturing, Online selling through ecommerce platforms like Amazon, Digital Marketing with Google Adsense &amp; FacebookAds.  In simple words “Internet &amp; Computers” are missing or I would rahther say ignored by our so called “Indian Education System”.Grade system, to test student ablilities (Yikes),  Cause we never know how much a student knows about something without testing him/her in a real world scenario.  Discussions/Debate/Interviews/Internships are good way to test a students' abilities.Real world financial education  They teach us about how to manage company funds, not how to manage our own funds.  In simple words: how to maxmimize our income &amp; gains(investing), &amp; not how to minimize your expenses(savings)  Every student nowadays own a smartphone worth of atleast 20k &amp; they dont even use to its full potential  i.e. we can do content creation, digital marketing, programming, learn trading &amp; many other things all this for free. ,  but they do they do instead ? Gaming typically battle royale like PUBG or Free Fire.  Or Social Media a new drug in the market, We can see “busy students” outside every education institutes, Scrolling through their facebook, twitter, instagram etc.Result  Traditional teaching apporoach(Theortical) + Out of date syllabus + Irrelevant subjects = A piece of paper that is of no use &amp; a human with no particular skill in hand.Solutions(How???)  More real world subjects like digital marketing.  Book keeping using erp softwares like Busy.  Enterprise Resource Mangement using Odoo Erp or Dolibarr.  Official work using presentations, spreadsheets etc.  New Passion related subjects like  Music Production using Digital Audio Workstation, Also Writing Lyrics.  Video Production using DSLR Cameras &amp; Processing it using Adobe premeier. Also writing screenplay or jokes for standup comedians  Renewable energy using solar panels &amp; wind mills etc.  Game development using Unity.  Android app development using kotlin &amp; android sdk.  Architectural planning using AutoCAD &amp; Autodesk Revit.  Web security using OWASP study material &amp; Burpsuite.  (…Insert any topic with their real world applications)  Freedom for students to choose what they want to be in their life, regardless of their gender, grades, or whatever.  btw i didnt included any medical &amp; engineering topics as they are already too common in india.  Learn by doing is always the best apporoach to learn something!Conclusion(When???)  I think we should all focus on heading towards the solutions  But sadly we’re mostly still stuck in time,  All I see is youngsters here in my area are just preparing for laid back 9 to 1 govt jobs (&amp; yes most govt. clerks work from 9am to 1pm, or govt. teachers 8am to 2pm max)  This is happening often due to herd mentality (i.e. sheep follow sheep)  Anyways My belief is Everything is Learned a Skill.  Nobody is born with talent/Skill  but exceptions are always there ;)Thank you very much for reading till the end, Hope you have a great day. :)",
            "content_html": "<h2 id=\"problems-or-what--why\">Problems or (What &amp; Why?)??</h2><h3 id=\"why-people-are-chasing-success-what-do-they-mean-by-success-is-financial-success-is-everything\">Why people are chasing success? What do they mean by success? is financial success is everything?</h3><ul>  <li>As of now in 2021's India Most people think success is getting a govt. job &amp; that's it!But I dont think so? is govt job is keep up to everything want in life? No, its just a secure jobwhile nothing is permanent in this world, they think are settled, but in real life, nobody gets settledafter getting, we gotta repeat same things almost daily, and repetition is equal to boredom.</li>  <li>From my perespective i think life is about balacing all aspects of human a beings' life,I mean keeping everything balanced from work life to social life, childhood to parenthood, physical health to mental health everything needs to balanced, While our education system only teachs about how to get a job, not how to live a life.</li>  <li>Anyways here are some problems that i faced/found in our current indian education system while i was studying commerce from school &amp;  college.</li></ul><h3 id=\"irrelevant-subjects\">Irrelevant subjects</h3><ul>  <li>Like Business &amp; Industerial Laws, Hindi Language. This subject must be relevant to Law/Hindi specialization students only.</li>  <li>However these subjects can be recommended &amp; but not mandatory to study (Optionally any one can look it up on internet, if they want to).</li></ul><h3 id=\"out-of-date-syllabuscircicullum\">Out of date syllabus/circicullum</h3><ul>  <li>In modern day society accounting is mostly done through computers. But they dont teach us about computers</li>  <li>They dont teach us about Book Keeping softwares like Busy, Tally etc.</li>  <li>&amp; Even Nowadays from manufacturing to selling products or services whether they are tangible or intangible.</li>  <li>Are Now being done with the help of computers, E.g. Product design using solidworks, IoT devices to Aid in manufacturing, Online selling through ecommerce platforms like Amazon, Digital Marketing with Google Adsense &amp; FacebookAds.</li>  <li>In simple words “Internet &amp; Computers” are missing or I would rahther say ignored by our so called “Indian Education System”.</li></ul><h3 id=\"grade-system-to-test-student-ablilities-yikes\">Grade system, to test student ablilities (Yikes),</h3><ul>  <li>Cause we never know how much a student knows about something without testing him/her in a real world scenario.</li>  <li>Discussions/Debate/Interviews/Internships are good way to test a students' abilities.</li></ul><h2 id=\"real-world-financial-education\">Real world financial education</h2><ul>  <li>They teach us about how to manage company funds, not how to manage our own funds.</li>  <li>In simple words: how to maxmimize our income &amp; gains(investing), &amp; not how to minimize your expenses(savings)</li>  <li>Every student nowadays own a smartphone worth of atleast 20k &amp; they dont even use to its full potential</li>  <li>i.e. we can do content creation, digital marketing, programming, learn trading &amp; many other things all this for free. ,</li>  <li>but they do they do instead ? Gaming typically battle royale like PUBG or Free Fire.</li>  <li>Or Social Media a new drug in the market, We can see “busy students” outside every education institutes, Scrolling through their facebook, twitter, instagram etc.</li></ul><h2 id=\"result\">Result</h2><ul>  <li>Traditional teaching apporoach(Theortical) + Out of date syllabus + Irrelevant subjects = A piece of paper that is of no use &amp; a human with no particular skill in hand.</li></ul><h1 id=\"solutionshow\">Solutions(How???)</h1><ul>  <li>More real world subjects like digital marketing.</li>  <li>Book keeping using erp softwares like Busy.</li>  <li>Enterprise Resource Mangement using Odoo Erp or Dolibarr.</li>  <li>Official work using presentations, spreadsheets etc.</li>  <li>New Passion related subjects like</li>  <li>Music Production using Digital Audio Workstation, Also Writing Lyrics.</li>  <li>Video Production using DSLR Cameras &amp; Processing it using Adobe premeier. Also writing screenplay or jokes for standup comedians</li>  <li>Renewable energy using solar panels &amp; wind mills etc.</li>  <li>Game development using Unity.</li>  <li>Android app development using kotlin &amp; android sdk.</li>  <li>Architectural planning using AutoCAD &amp; Autodesk Revit.</li>  <li>Web security using OWASP study material &amp; Burpsuite.</li>  <li>(…Insert any topic with their real world applications)</li>  <li>Freedom for students to choose what they want to be in their life, regardless of their gender, grades, or whatever.</li>  <li>btw i didnt included any medical &amp; engineering topics as they are already too common in india.</li>  <li>Learn by doing is always the best apporoach to learn something!</li></ul><h2 id=\"conclusionwhen\">Conclusion(When???)</h2><ul>  <li>I think we should all focus on heading towards the solutions</li>  <li>But sadly we’re mostly still stuck in time,</li>  <li>All I see is youngsters here in my area are just preparing for laid back 9 to 1 govt jobs (&amp; yes most govt. clerks work from 9am to 1pm, or govt. teachers 8am to 2pm max)</li>  <li>This is happening often due to herd mentality (i.e. sheep follow sheep)</li>  <li>Anyways My belief is Everything is Learned a Skill.</li>  <li>Nobody is born with talent/Skill</li>  <li>but exceptions are always there ;)</li></ul><h2 id=\"thank-you-very-much-for-reading-till-the-end-hope-you-have-a-great-day-\">Thank you very much for reading till the end, Hope you have a great day. :)</h2>",
            "url": "https://t4p4n.github.io/2021/12/24/education-rant",
            
            
            
            "tags": ["education","rant"],
            
            "date_published": "2021-12-24T00:00:00+05:30",
            "date_modified": "2021-12-24T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        },
    
        {
            "id": "https://t4p4n.github.io/2021/12/23/hello-world",
            "title": "Hello World",
            "summary": null,
            "content_text": "TitleMain HeadHello World this is working i guess!Sub Head  List Item          nested item                  more nests                    Code Snippet",
            "content_html": "<h1 id=\"title\">Title</h1><h2 id=\"main-head\">Main Head</h2><p>Hello World this is working i guess!</p><h2 id=\"sub-head\">Sub Head</h2><ul>  <li>List Item    <ul>      <li>nested item        <ul>          <li>more nests</li>        </ul>      </li>    </ul>  </li></ul><p><code class=\"language-plaintext highlighter-rouge\">Code Snippet</code></p>",
            "url": "https://t4p4n.github.io/2021/12/23/hello-world",
            
            
            
            
            
            "date_published": "2021-12-23T00:00:00+05:30",
            "date_modified": "2021-12-23T00:00:00+05:30",
            
                "author":  {
                "name": "Tapan Kashyap",
                "url": null,
                "avatar": null
                }
                
            
        }
    
    ]
}