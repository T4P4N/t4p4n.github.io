<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>T4P4N</title>
 <link href="https://t4p4n.github.io/atom.xml" rel="self"/>
 <link href="https://t4p4n.github.io/"/>
 <updated>2022-09-17T19:05:11+05:30</updated>
 <id>https://t4p4n.github.io</id>
 <author>
   <name>Tapan Kashyap</name>
   <email>tapank415@gmail.com</email>
 </author>

 
 <entry>
   <title>Rails active resource link helper</title>
   <link href="https://t4p4n.github.io/2022/09/15/rails-active-link-helper"/>
   <updated>2022-09-15T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/09/15/rails-active-link-helper</id>
   <content type="html">&lt;p&gt;There are many snippets on stack overflow around this topic but&lt;br /&gt;
those are mostly dealing with a specific link to a page or a resource e.g. about page or blogs page
if you haven’t tried those snippets, you can try this one out:&lt;/p&gt;

&lt;h6 id=&quot;apphelpersapplication_helperrb&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/helpers/application_helper.rb&lt;/code&gt;&lt;/h6&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ApplicationHelper&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;current?&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_page?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;h6 id=&quot;viewslayoutapplicationhtmlerb&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;views/layout/application.html.erb&lt;/code&gt;&lt;/h6&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;%= url_for(admin_posts_path) %&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;%= &quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;current&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sample_active_link_class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;admin_posts_path&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; normal_class&quot;
    &amp;gt; Posts &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This works using the current_page function provided by rails action view url helper.
Read more about it &lt;a href=&quot;https://api.rubyonrails.org/classes/ActionView/Helpers/UrlHelper.html#method-i-current_page-3F&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Basically this current functions takes two arguments which are&lt;br /&gt;
key in our case the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sample_active_link_class&lt;/code&gt; And path&lt;br /&gt;
which we have here as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin_posts_path&lt;/code&gt; , and returns the key (classname)&lt;/p&gt;

&lt;p&gt;if the current_page is matches the given path/url (i.e. admin_posts_path). 
Else it returns nothing and we fall back to normal_class_name&lt;/p&gt;

&lt;p&gt;The above code is sufficient if we’re working with a simple navbar which have doesn’t need &lt;br /&gt;
“dynamicness” if lets say we have a navbar &amp;amp; content page like this&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;T4P4N  | [ ...search ]         |
_______________________________|
Posts* | Hello world           |
       | [first_post, new_tag] |
_______| by t4p4n              |
Tags   | edit | delete         |
       |                       |
_______|_______________________|
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;* represents active state^
if we click on edit this *
will disappear as we’re no longer on the index page
but we’re still working with a post resource so it needs
to be in active state.&lt;/p&gt;
&lt;h5 id=&quot;this-is-when-we-need-the-snippet-below&quot;&gt;This is when we need the snippet below:&lt;/h5&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;h6 id=&quot;apphelpersactive_resource_helperrb&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;app/helpers/active_resource_helper.rb&lt;/code&gt;&lt;/h6&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;ActiveResourceHelper&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;on_posts_index_show_edit?&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;in_posts?&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;index&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;show&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;edit&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    


    &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;in_posts?&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;controller_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;posts&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;    
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;_&lt;/p&gt;

&lt;h6 id=&quot;viewslayoutapplicationhtmlerb-1&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;views/layout/application.html.erb&lt;/code&gt;&lt;/h6&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;%= url_for(admin_posts_path) %&amp;gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;%= &quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;{&quot;&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;sample_active_link_class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;on_posts_index_show_edit&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;?}&quot;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt; normal_link_class &quot;
    &amp;gt; Posts &lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-does-this-work&quot;&gt;How does this^ work?&lt;/h3&gt;
&lt;p&gt;here we’re working with just two variables provided by rails to help us in
these kind of scenarios, first one is : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;action_name&lt;/code&gt;
which as the name suggests, have the value of current action &lt;br /&gt;
on the specific page that we’re rendering.&lt;/p&gt;

&lt;p&gt;And second one is 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;controller_path&lt;/code&gt; which simply returns anything after the base url
that is in our case &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin/posts&lt;/code&gt;, which then split by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/&lt;/code&gt; and&lt;br /&gt;
we get the second item from array returned by split function, and check if its&lt;br /&gt;
the same as we want to be.&lt;/p&gt;

&lt;p&gt;This is useful when we are creating a navbar for a admin panel &lt;br /&gt;
where we need to list all available resources of our application 
&amp;amp; have actions associated with them like index, create, edit,
 show, delete etc.&lt;/p&gt;

&lt;h4 id=&quot;thanks-for-reading&quot;&gt;Thanks for reading!&lt;/h4&gt;
</content>
 </entry>
 
 <entry>
   <title>Ruby on rails active storage custom key or path</title>
   <link href="https://t4p4n.github.io/2022/09/13/rails-active-storage-custom-key-or-path-s3"/>
   <updated>2022-09-13T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/09/13/rails-active-storage-custom-key-or-path-s3</id>
   <content type="html">&lt;ul&gt;
  &lt;li&gt;Chances are if you came to this post, you’re probably looking for this snippet:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;profile_pic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;io:  &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;filename:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;key:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;images/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Okay so what it does actually, 
first we get the uploaded file from params 
and then we attach the image with model_object.attach method
You can read more about it  &lt;a href=&quot;https://github.com/rails/rails/commit/4dba136c83cc808282625c0d5b195ce5e0bbaa68&quot;&gt;here&lt;/a&gt;
and then just call the save method.&lt;/p&gt;

&lt;p&gt;Basic idea is we have to treat images or files separately 
if we want to use custom key, Otherwise it will generate keys like this:  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pv8xs3kdz4aohenj9znjgrhpgty8&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zem3wx1hmiyh9q4ahyuav1ooj4j9&lt;/code&gt;
which is definitely worse than these : &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;images/420/my_pic.jpg&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;images/420/oYUcPwegJppnAK4UJmv52e3xpNXf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In the long run when we want to migrate/remove our data, we can do 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rm -rf images/&lt;/code&gt; on the other hand if we use auto generated keys we need to figure out which one are images 
or videos or documents etc.&lt;/p&gt;

&lt;p&gt;Since auto generated keys doesn’t have extensions. 
We can’t really check them without opening the files, 
and not to mention that we also don’t have directories 
(which is essentially just keys separated by backslashes).&lt;/p&gt;

&lt;p&gt;But there’s one issue this approach  if we use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;original_filename&lt;/code&gt; in the key like this:&lt;/p&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;profile_pic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;io:  &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;filename:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;ss&quot;&gt;key:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;images/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;########################## Here^&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;the-issue-we-need-to-face-is-duplicate-key-error-which-will-be-caused-if-user-tries-to-upload-a-image-with-same-name-so-lets-look-what-is-it--how-to-deal-with-it&quot;&gt;The issue we need to face is Duplicate Key Error which will be caused if user tries to upload a image with same name. so let’s look what is it &amp;amp; how to deal with it?&lt;/h5&gt;
&lt;h4 id=&quot;error&quot;&gt;Error&lt;/h4&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RecordNotUnique&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PG&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UniqueViolation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;duplicate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;violates&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constraint&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;index_active_storage_blobs_on_key&quot;&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;DETAIL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;no&quot;&gt;Key&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;420&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;profile_pic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;jpg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;already&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exists&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;the-deal&quot;&gt;The deal&lt;/h5&gt;
&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;&apos;securerandom&apos;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# important^&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;UsersController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;profile_pic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;io:  &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;filename:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;image_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;original_filename&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;ss&quot;&gt;key:  &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;images/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SecureRandom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;base58&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;########################## Use This^&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Explanation: we import the the secure random module with  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;require  &apos;securerandom&apos;&lt;/code&gt; you can read more about it &lt;a href=&quot;https://ruby-doc.org/stdlib-1.9.2/libdoc/securerandom/rdoc/SecureRandom.html&quot;&gt;here&lt;/a&gt;
PS: it generates secure and also random strings/numbers/hex/bytes etc.
 this module is also used by rails active storage evidence &lt;a href=&quot;https://api.rubyonrails.org/classes/ActiveRecord/SecureToken/ClassMethods.html#method-i-generate_unique_secure_token&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://apidock.com/rails/ActiveStorage/Blob/key&quot;&gt;here&lt;/a&gt;
 also i checked both keys one(auto-gen by rails) by one(our patch above)
 both have same length (28 chars)&lt;/p&gt;

&lt;p&gt;just so that we don’t have to worry about potential security issues introduced by our own patches.&lt;/p&gt;

&lt;p&gt;Anyways that’s it for this one!
 if you want  to support me! just me hit up!  via &lt;a href=&quot;https://t4p4n.github.io/contact/&quot;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;h5 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h5&gt;
</content>
 </entry>
 
 <entry>
   <title>Data migration from old to new laptop</title>
   <link href="https://t4p4n.github.io/2022/09/12/file-transfer-between-laptops"/>
   <updated>2022-09-12T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/09/12/file-transfer-between-laptops</id>
   <content type="html">&lt;p&gt;This sunday, i tried to transfer files from my old hp notebook(i3 5th gen, 4GB, 1TB HDD) 
to my acer aspire 7 laptop(i5 12th gen, 8GB 512 GB pcie gen4 ssd)&lt;/p&gt;

&lt;p&gt;After doing all the typical morning routine stuff,
i’m ready to rock, not really cause frustration ahead :(&lt;/p&gt;

&lt;p&gt;First thing i did was setting up openssh on windows 10 (native i,e not wsl) and it was painful tbh, took me 1.5 hrs
I already wsl2 ubuntu setup on my old laptop 
it could have great since i consider myself already good with linux.&lt;/p&gt;

&lt;p&gt;But some issues with WSL2 Ubuntu
its with IP assigned to WSL2 (btw wsl2 is a vm) each time network switches, The IP of wsl2  machine changes to some random IP, 
which then needs to be forwarded via port proxy (powershell cmd) so that it exposed To LAN.&lt;/p&gt;

&lt;p&gt;This is why i choose windows 10 native openssh server although it wasn’t a good experience due to lack of documentation from Microsoft side.&lt;/p&gt;

&lt;p&gt;This was the network diagram after setting up openssh server:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Old laptop &amp;lt;---&amp;gt; My Phone &amp;lt;---&amp;gt; New Laptop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;i used my phone as wifi hotspot to connect both devices &amp;amp; Winscp(scp client) on new laptop.&lt;/p&gt;

&lt;p&gt;if you’re wondering why i used my phone?
it’s because our router is a bit far away from my room, not mention that it may slow down others internet(LAN) too, 
since its a cheap router like 10 bucks or 800rs. And also probably would have caused speed issues due to lack of network coverage in my roon.&lt;/p&gt;

&lt;p&gt;But even with my phone sitting in between two laptops (and i mean technically &amp;amp; literally both here) and 
bummer i got like 3-4 MB data transfer speed :( and not only that ii was fluctuating cause of number of files i was transferring about 10GB
and an average about 3 MB per file&lt;/p&gt;

&lt;p&gt;So i left it on for a while &amp;amp; slept for like 1 hr
and i woke at 2:30pm i guess &amp;amp; it was still in progress &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-_-&lt;/code&gt; anyhow i let it run, there’s also another issue with wireless transfer, 
when i turned on Bluetooth to connect my wireless earphones to my phone, And then speed suddenly went down to like 949 kbps &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-_-&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;This was happening due to air traffic between 2.4 ghz wifi &amp;amp; 2.4ghz Bluetooth using same frequency band.&lt;/p&gt;

&lt;p&gt;that was my situation i can’t even use my phone for anything &amp;amp; laptops are already busy transferring data, 
If you remember i was using my phone as wifi hotspot, and both laptops were connected to it. 
There’s also one problem with it was my phone didn’t had any internet pack available, 
so i was completely offline for like 3 hrs straight &amp;amp; without any entertainment lols&lt;/p&gt;

&lt;p&gt;That was probably why i fell asleep XD&lt;/p&gt;

&lt;p&gt;Fast forward to 3:30pm after transfer was complete i messaged my friend ben, 
and i informed him about the situation i was struggling with and asked for alternatives.&lt;/p&gt;

&lt;p&gt;He sent a photo of LAN Cable, and said it will useful in these scenarios &amp;amp; 
i asked few question about if we could connect two laptops directly without any switch or router, and he said yes, after a while 
I remembered my brother had one LAN cable, which came in the tenda router box. I went to upstairs for tea break, and got the cable.&lt;/p&gt;

&lt;p&gt;Connected the cable from old laptop to new laptop, And this was my first experience with a LAN Cable, 
I started searching the internet for sharing files with a lan cable, found some articles
did the typical network &amp;amp; file sharing setup in windows 10 &amp;amp; did test transfer of like 10GB
of my music collection, about roughly 2100+ audio files
and it just took less than 15mins.&lt;/p&gt;

&lt;p&gt;I got like 10MBps or 100mbps and this time it was almost consistent 10MBps, And also i was to able to use my Bluetooth earphones &amp;amp; internet(wifi) freely.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Persistent Checkbox Rails</title>
   <link href="https://t4p4n.github.io/2022/08/20/rails-persistent-checkbox"/>
   <updated>2022-08-20T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/08/20/rails-persistent-checkbox</id>
   <content type="html">&lt;h3 id=&quot;whats-the-problem&quot;&gt;Whats the problem&lt;/h3&gt;
&lt;p&gt;The default form helper for checkbox gives us weird mess of options to work with  &lt;br /&gt;
And i found them very very annoying to a beginner like me, the issue  &lt;br /&gt;
is when you submit a form with your checked checkboxes, they goto server as&lt;br /&gt;
usual params (with “0” and “1”, definetly not good for html we gonna need render next page)&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;s2&quot;&gt;&quot;is_mad&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
	&lt;span class=&quot;s2&quot;&gt;&quot;q&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rails is fcked up&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
	&lt;span class=&quot;s2&quot;&gt;&quot;commit&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Search&quot;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;but when you render the you try with input checkbox&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:is_mad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and you get 1&lt;br /&gt;
which doesnt represents the checked state of checkbox so here’s the solution&lt;/p&gt;

&lt;div class=&quot;language-ruby highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form.check_box :is_mad, checked: true ? params[:is_mad].to_i =&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:&quot;bs-sucks&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;And this works as expected you get desired state of checkbox, entered by user.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Dunno why this isn’t posted anywhere on the internet all i see broken checkboxs&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Examples:
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;https://betterprogramming.pub/build-a-smart-filter-for-your-rails-5-application-using-simple-form-and-acts-as-tattable-afac128e4159&quot;&gt;Bad Programming Hub&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;https://www.reddit.com/r/rails/comments/c201oc/issue_with_using_checkboxes_and_retaining_checked/&quot;&gt;Reddit post&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h5&gt;
</content>
 </entry>
 
 <entry>
   <title>A Good Day</title>
   <link href="https://t4p4n.github.io/2022/08/17/a-random-day"/>
   <updated>2022-08-17T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/08/17/a-random-day</id>
   <content type="html">&lt;p&gt;wakeup at 7:15 am  &lt;br /&gt;
went out to plot at 8:10am&lt;br /&gt;
shower &amp;amp; breakfast till 10am&lt;br /&gt;
work till 6:15 pm&lt;br /&gt;
in between had a chat with relative brother of mine&lt;br /&gt;
ate sandwich in lunch, In the Evening&lt;br /&gt;
after work, i went to terrace to enjoy the beautiful sunset&lt;br /&gt;
with partially cottony clouds, and cold breeze running through the trees all around&lt;br /&gt;
i messaged my brother for weather saying come up here fast.&lt;br /&gt;
we had small chats about various stuff exams politics independence day kites etc.&lt;br /&gt;
, looked at clouds sun sky, kites, all in all enjoyed every moment of sunset.&lt;br /&gt;
In the night after eating my dinner we went for night walk as usual&lt;br /&gt;
at nearby park (bankner sports complex), which is a community maintained &lt;br /&gt;
(not very well) park, we walked 4 rounds of 400 metres each with same awesome weather, &lt;br /&gt;
came back &amp;amp; washed my feets as always&lt;br /&gt;
since its very micro sandy there, the track that we walk is made of all raw sand &amp;amp; soil&lt;br /&gt;
compressed with a stone roller to avoid weed &amp;amp; shurbs growth on track,&lt;br /&gt;
after washing my feet i went to terrace to enjoy the breeze and also took my&lt;br /&gt;
bluetooth neckband earphones with me to have music.&lt;br /&gt;
Started listening to &lt;a href=&quot;https://www.youtube.com/watch?v=JRLFr6THaTI&quot;&gt;Low Hum Comatose&lt;/a&gt;. &lt;br /&gt;
While walking slowly and looking up at stars, &lt;br /&gt;
just within few seconds while walking i saw one of most rarest experience i ever had,&lt;br /&gt;
that seeing is a falling star in real life, it was astonishing, i was stunned for few seconds, &lt;br /&gt;
then smiled started walking again &amp;amp; just after that, power outage of whole village, And i’m like yes!  &lt;br /&gt;
when the power goes down, it feels way too good! zero to no noise pollution what so ever.
All dark &amp;amp; stars shining through the white cottony clouds,  &lt;br /&gt;
Cold breeze flowing with very good aqi about 70 less. &lt;br /&gt;
High visibility of both landscapes &amp;amp; sky.  &lt;br /&gt;
Yesterday was one of most awesome day for me in 2022.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Short term goals are important (rails)</title>
   <link href="https://t4p4n.github.io/2022/08/13/short-term-goals"/>
   <updated>2022-08-13T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/08/13/short-term-goals</id>
   <content type="html">&lt;p&gt;Let’s start by defining what short term goal is:
Its a achievable in short duration i.e within days or months for example learning ruby on rails&lt;/p&gt;

&lt;h3 id=&quot;create&quot;&gt;Create&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;like something a todo/blog app just to get a hint of how things work in rails&lt;/li&gt;
  &lt;li&gt;but only do this you haven’t work with MVC architecture before.&lt;/li&gt;
  &lt;li&gt;Otherwise build something that uses some more framework specific features like rails helpers &amp;amp; concerns or other features specific to your project.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;modify&quot;&gt;Modify&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Read Code &amp;amp; Do incremental changes&lt;/li&gt;
  &lt;li&gt;Take notes with pen &amp;amp; paper, also try drawing relationship b/w two or models.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;observe&quot;&gt;Observe&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Inspect generated migrations &amp;amp; schema&lt;/li&gt;
  &lt;li&gt;Inspect db after migrations &amp;amp; also after seeding&lt;/li&gt;
  &lt;li&gt;Read server logs &amp;amp; add print/puts statements in controllers it will give you a more clear idea about things are working internally.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;watch--read&quot;&gt;Watch &amp;amp; Read&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Watch videos about rails on YT checklout deanin , super rails, jesus castello railscasts etc.&lt;/li&gt;
  &lt;li&gt;Read blogs, checkout saeloun, big binary, Ruby Guides, also checkout learn rails 6 by adam notodikromo if you’re into books(like me)&lt;/li&gt;
  &lt;li&gt;Read rails guide.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;write--debug&quot;&gt;Write &amp;amp; Debug&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;don’t be afraid to mess things up&lt;/li&gt;
  &lt;li&gt;but if you did made a mess &amp;amp; it works&lt;/li&gt;
  &lt;li&gt;then its responsiblity to clean it up&lt;/li&gt;
  &lt;li&gt;PS: you can write spaghetti code but also refactor it as much as possible.&lt;/li&gt;
  &lt;li&gt;Do trial &amp;amp; error very important&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Reverse a Array</title>
   <link href="https://t4p4n.github.io/2022/05/30/reverse-array"/>
   <updated>2022-05-30T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/05/30/reverse-array</id>
   <content type="html">&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;reverse_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;reverse_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# [10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Code is fairly simple to understand give it a try&lt;/li&gt;
  &lt;li&gt;Else just Google it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h5&gt;
</content>
 </entry>
 
 <entry>
   <title>FizzBuzz</title>
   <link href="https://t4p4n.github.io/2022/05/29/fizzbuzz"/>
   <updated>2022-05-29T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/05/29/fizzbuzz</id>
   <content type="html">&lt;h3 id=&quot;problem-statement&quot;&gt;problem statement:&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;print fizz if the number is divisble by 3&lt;/li&gt;
  &lt;li&gt;print buzz if the number is divisble by 5&lt;/li&gt;
  &lt;li&gt;print fizzbuzz if the number is divisble by both 3 &amp;amp; 5&lt;/li&gt;
  &lt;li&gt;else just print the number.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fizzbuzz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;FizzBuzz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Fizz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Buzz&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fizzbuzz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Code is fairly simple to understand give it a try&lt;/li&gt;
  &lt;li&gt;Else just Google it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h5&gt;
</content>
 </entry>
 
 <entry>
   <title>Caesar Cipher</title>
   <link href="https://t4p4n.github.io/2022/05/28/caesar-cipher"/>
   <updated>2022-05-28T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/05/28/caesar-cipher</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://commons.wikimedia.org/wiki/File:Siege-alesia-vercingetorix-jules-cesar.jpg&quot; title=&quot;Lionel Royer
, Public domain, via Wikimedia Commons&quot;&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Siege-alesia-vercingetorix-jules-cesar.jpg/512px-Siege-alesia-vercingetorix-jules-cesar.jpg&quot; alt=&quot;Siege-alesia-vercingetorix-jules-cesar&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Try to implement caesar cipher using plain python.&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;uppercase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ABCDEFGHIJKLMNOPQRSTUVWXYZ&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;lowercase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abcdefghijklmnopqrstuvwxyz&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;&apos;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

            &lt;span class=&quot;c1&quot;&gt;# (1)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;

			&lt;span class=&quot;c1&quot;&gt;# (2)
&lt;/span&gt;            &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uppercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;elif&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lowercase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Cipher text: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encrypt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;a_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter a name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter a key (must be integer) &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;cipher&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How it works&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;(1) if the letter is uppercase we get index of it and add key to it.&lt;/li&gt;
  &lt;li&gt;(1.1) and then we use modulus operator(which return either 0 or remainder) with 26 as divisor&lt;/li&gt;
  &lt;li&gt;(1.2) we treat new as new index of letter&lt;/li&gt;
  &lt;li&gt;(2) then we append to encrypt variable with the new index of letter.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cant-understand-what-i-wrote-here&quot;&gt;Can’t understand what i wrote here?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Go ahead and look it on internet&lt;/li&gt;
  &lt;li&gt;here some links to resources&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Caesar_cipher&quot;&gt;Caesar Cipher&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Modulo_operation&quot;&gt;Modolus Operator&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h5&gt;
</content>
 </entry>
 
 <entry>
   <title>Last digit !!!??</title>
   <link href="https://t4p4n.github.io/2022/05/27/last-digits"/>
   <updated>2022-05-27T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/05/27/last-digits</id>
   <content type="html">&lt;h2 id=&quot;get-last-digit-from-a-string&quot;&gt;Get last digit from a string&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Example string: “Get 10% off on minimum cart value of $199”&lt;/li&gt;
  &lt;li&gt;Try to get only the last digit i.e. 9&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Get 10% off on minimum cart value of $199&quot;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;last_digit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;# (1)
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isdigit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;# (2)
&lt;/span&gt;	&lt;span class=&quot;n&quot;&gt;ld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;digits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;# (3)
&lt;/span&gt;	&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ld&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;last_digit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;how-it-works&quot;&gt;How it works&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;(1) use list comprehension to get all the digits from string&lt;/li&gt;
  &lt;li&gt;(2) get last element from list using string slicing with negative index.&lt;/li&gt;
  &lt;li&gt;(3) finally print the last digit&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h5&gt;
</content>
 </entry>
 
 <entry>
   <title>Anagrams !?</title>
   <link href="https://t4p4n.github.io/2022/05/26/anagram-detection"/>
   <updated>2022-05-26T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/05/26/anagram-detection</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://upload.wikimedia.org/wikipedia/commons/3/33/Anagram_Listen_%3D_Silent.gif&quot; alt=&quot;Listen&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-is-it-&quot;&gt;What is it !?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Its just a fancy term for saying:&lt;/li&gt;
  &lt;li&gt;letters from strings matches to letters of other string&lt;/li&gt;
  &lt;li&gt;Some examples:&lt;/li&gt;
  &lt;li&gt;seat eats&lt;/li&gt;
  &lt;li&gt;heart earth&lt;/li&gt;
  &lt;li&gt;shit hits&lt;/li&gt;
  &lt;li&gt;skin sink&lt;/li&gt;
  &lt;li&gt;altitude latitude&lt;/li&gt;
  &lt;li&gt;Python code for this type of program&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_anagram&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;sorted&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Yes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;external-links&quot;&gt;External Links:&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Ambigram&quot;&gt;Ambigrams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h3&gt;

</content>
 </entry>
 
 <entry>
   <title>Palindrome !?</title>
   <link href="https://t4p4n.github.io/2022/05/25/palindrome-python"/>
   <updated>2022-05-25T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2022/05/25/palindrome-python</id>
   <content type="html">&lt;h2 id=&quot;rotavator&quot;&gt;Rotavator&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://img2.exportersindia.com/product_images/bc-full/dir_10/289726/rotavator-1512462441-3497789.jpeg&quot; alt=&quot;Rotavator&quot; title=&quot;a rotavator&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;palindrome-what-is-it-&quot;&gt;Palindrome? What is it !?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Its just a fancy term for saying something like this:&lt;/li&gt;
  &lt;li&gt;string/integer matches to their reverse.&lt;/li&gt;
  &lt;li&gt;Example: POP equals to POP(reverse of pop)&lt;/li&gt;
  &lt;li&gt;Another example: madam equals to madam(reverse of madam)&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Yet another example: Rotavator equals to rotvatoR(reverse of rotavator)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;non-examples aka false statements:&lt;/li&gt;
  &lt;li&gt;“Hello world” equals to “dlrow olleH”&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;“definetly not” equals to “ton yltenifed”&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Python code for this type of program&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter something: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[::&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reverse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Yes&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Nope&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;is_palindrome&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;suggested improvements:&lt;/li&gt;
  &lt;li&gt;we can use manual function for string reversal&lt;/li&gt;
  &lt;li&gt;instead of using python slicling magic.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hope-you-learned-something-today-atleast-i-did-for-sure&quot;&gt;Hope you learned something today atleast i did for sure.&lt;/h3&gt;
&lt;h3 id=&quot;thanks-for-reading-&quot;&gt;Thanks for reading :)&lt;/h3&gt;

</content>
 </entry>
 
 <entry>
   <title>Education Rant</title>
   <link href="https://t4p4n.github.io/2021/12/24/education-rant"/>
   <updated>2021-12-24T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2021/12/24/education-rant</id>
   <content type="html">&lt;h2 id=&quot;problems-or-what--why&quot;&gt;Problems or (What &amp;amp; Why?)??&lt;/h2&gt;
&lt;h3 id=&quot;why-people-are-chasing-success-what-do-they-mean-by-success-is-financial-success-is-everything&quot;&gt;Why people are chasing success? What do they mean by success? is financial success is everything?&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;As of now in 2021&apos;s India Most people think success is getting a govt. job &amp;amp; that&apos;s it!
But I dont think so? is govt job is keep up to everything want in life? No, its just a secure job
while nothing is permanent in this world, they think are settled, but in real life, nobody gets settled
after getting, we gotta repeat same things almost daily, and repetition is equal to boredom.&lt;/li&gt;
  &lt;li&gt;From my perespective i think life is about balacing all aspects of human a beings&apos; life,
I mean keeping everything balanced from work life to social life, childhood to parenthood, physical health to mental health 
everything needs to balanced, While our education system only teachs about how to get a job, not how to live a life.&lt;/li&gt;
  &lt;li&gt;Anyways here are some problems that i faced/found in our current indian education system while i was studying commerce from school &amp;amp;  college.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;irrelevant-subjects&quot;&gt;Irrelevant subjects&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Like Business &amp;amp; Industerial Laws, Hindi Language. This subject must be relevant to Law/Hindi specialization students only.&lt;/li&gt;
  &lt;li&gt;However these subjects can be recommended &amp;amp; but not mandatory to study (Optionally any one can look it up on internet, if they want to).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;out-of-date-syllabuscircicullum&quot;&gt;Out of date syllabus/circicullum&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;In modern day society accounting is mostly done through computers. But they dont teach us about computers&lt;/li&gt;
  &lt;li&gt;They dont teach us about Book Keeping softwares like Busy, Tally etc.&lt;/li&gt;
  &lt;li&gt;&amp;amp; Even Nowadays from manufacturing to selling products or services whether they are tangible or intangible.&lt;/li&gt;
  &lt;li&gt;Are Now being done with the help of computers, E.g. Product design using solidworks, IoT devices to Aid in manufacturing, Online selling through ecommerce platforms like Amazon, Digital Marketing with Google Adsense &amp;amp; FacebookAds.&lt;/li&gt;
  &lt;li&gt;In simple words “Internet &amp;amp; Computers” are missing or I would rahther say ignored by our so called “Indian Education System”.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;grade-system-to-test-student-ablilities-yikes&quot;&gt;Grade system, to test student ablilities (Yikes),&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Cause we never know how much a student knows about something without testing him/her in a real world scenario.&lt;/li&gt;
  &lt;li&gt;Discussions/Debate/Interviews/Internships are good way to test a students&apos; abilities.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;real-world-financial-education&quot;&gt;Real world financial education&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;They teach us about how to manage company funds, not how to manage our own funds.&lt;/li&gt;
  &lt;li&gt;In simple words: how to maxmimize our income &amp;amp; gains(investing), &amp;amp; not how to minimize your expenses(savings)&lt;/li&gt;
  &lt;li&gt;Every student nowadays own a smartphone worth of atleast 20k &amp;amp; they dont even use to its full potential&lt;/li&gt;
  &lt;li&gt;i.e. we can do content creation, digital marketing, programming, learn trading &amp;amp; many other things all this for free. ,&lt;/li&gt;
  &lt;li&gt;but they do they do instead ? Gaming typically battle royale like PUBG or Free Fire.&lt;/li&gt;
  &lt;li&gt;Or Social Media a new drug in the market, We can see “busy students” outside every education institutes, Scrolling through their facebook, twitter, instagram etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;result&quot;&gt;Result&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Traditional teaching apporoach(Theortical) + Out of date syllabus + Irrelevant subjects = A piece of paper that is of no use &amp;amp; a human with no particular skill in hand.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;solutionshow&quot;&gt;Solutions(How???)&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;More real world subjects like digital marketing.&lt;/li&gt;
  &lt;li&gt;Book keeping using erp softwares like Busy.&lt;/li&gt;
  &lt;li&gt;Enterprise Resource Mangement using Odoo Erp or Dolibarr.&lt;/li&gt;
  &lt;li&gt;Official work using presentations, spreadsheets etc.&lt;/li&gt;
  &lt;li&gt;New Passion related subjects like&lt;/li&gt;
  &lt;li&gt;Music Production using Digital Audio Workstation, Also Writing Lyrics.&lt;/li&gt;
  &lt;li&gt;Video Production using DSLR Cameras &amp;amp; Processing it using Adobe premeier. Also writing screenplay or jokes for standup comedians&lt;/li&gt;
  &lt;li&gt;Renewable energy using solar panels &amp;amp; wind mills etc.&lt;/li&gt;
  &lt;li&gt;Game development using Unity.&lt;/li&gt;
  &lt;li&gt;Android app development using kotlin &amp;amp; android sdk.&lt;/li&gt;
  &lt;li&gt;Architectural planning using AutoCAD &amp;amp; Autodesk Revit.&lt;/li&gt;
  &lt;li&gt;Web security using OWASP study material &amp;amp; Burpsuite.&lt;/li&gt;
  &lt;li&gt;(…Insert any topic with their real world applications)&lt;/li&gt;
  &lt;li&gt;Freedom for students to choose what they want to be in their life, regardless of their gender, grades, or whatever.&lt;/li&gt;
  &lt;li&gt;btw i didnt included any medical &amp;amp; engineering topics as they are already too common in india.&lt;/li&gt;
  &lt;li&gt;Learn by doing is always the best apporoach to learn something!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusionwhen&quot;&gt;Conclusion(When???)&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;I think we should all focus on heading towards the solutions&lt;/li&gt;
  &lt;li&gt;But sadly we’re mostly still stuck in time,&lt;/li&gt;
  &lt;li&gt;All I see is youngsters here in my area are just preparing for laid back 9 to 1 govt jobs (&amp;amp; yes most govt. clerks work from 9am to 1pm, or govt. teachers 8am to 2pm max)&lt;/li&gt;
  &lt;li&gt;This is happening often due to herd mentality (i.e. sheep follow sheep)&lt;/li&gt;
  &lt;li&gt;Anyways My belief is Everything is Learned a Skill.&lt;/li&gt;
  &lt;li&gt;Nobody is born with talent/Skill&lt;/li&gt;
  &lt;li&gt;but exceptions are always there ;)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;thank-you-very-much-for-reading-till-the-end-hope-you-have-a-great-day-&quot;&gt;Thank you very much for reading till the end, Hope you have a great day. :)&lt;/h2&gt;

</content>
 </entry>
 
 <entry>
   <title>Hello World</title>
   <link href="https://t4p4n.github.io/2021/12/23/hello-world"/>
   <updated>2021-12-23T00:00:00+05:30</updated>
   <id>https://t4p4n.github.io/2021/12/23/hello-world</id>
   <content type="html">&lt;h1 id=&quot;title&quot;&gt;Title&lt;/h1&gt;

&lt;h2 id=&quot;main-head&quot;&gt;Main Head&lt;/h2&gt;
&lt;p&gt;Hello World this is working i guess!&lt;/p&gt;

&lt;h2 id=&quot;sub-head&quot;&gt;Sub Head&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;List Item
    &lt;ul&gt;
      &lt;li&gt;nested item
        &lt;ul&gt;
          &lt;li&gt;more nests&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Code Snippet&lt;/code&gt;&lt;/p&gt;

</content>
 </entry>
 

</feed>
