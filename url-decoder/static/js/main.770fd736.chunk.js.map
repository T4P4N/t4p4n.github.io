{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","from","setFrom","to","setTo","compMode","setCompMode","inputRef","useRef","outputRef","useEffect","handleChange","encoded_url","current","value","decoded_url","decodeURIComponent","decodeURI","e","console","log","encodeURIComponent","encodeURI","className","onClick","id","name","rows","cols","ref","onChange","placeholder","temp","previousValue","focus","type","rootElement","document","getElementById","ReactDOM","render"],"mappings":"6LAIe,SAASA,IACtB,MAAwBC,IAAMC,SAAS,eAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoBH,IAAMC,SAAS,eAAnC,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAAgCL,IAAMC,UAAS,GAA/C,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAWR,IAAMS,SACjBC,EAAYV,IAAMS,SAYxBE,qBAAU,WACRC,GACD,GAAE,CAACN,EAAUJ,EAAME,IAEpB,IAAMQ,EAAe,WACnB,GAAa,gBAATV,EACF,IACE,IAAMW,EAAcL,EAASM,QAAQC,MAC/BC,EAAcV,EAChBW,mBAAmBJ,GACnBK,UAAUL,GACdH,EAAUI,QAAQC,MAAQC,CAG3B,CAFC,MAAOG,GACPC,QAAQC,IAAI,UAAWF,EACxB,MAED,IACE,IAAMH,EAAcR,EAASM,QAAQC,MAC/BF,EAAcP,EAChBgB,mBAAmBN,GACnBO,UAAUP,GACdN,EAAUI,QAAQC,MAAQF,CAG3B,CAFC,MAAOM,GACPC,QAAQC,IAAI,UAAWF,EACxB,CAEJ,EAED,OACE,sBAAKK,UAAU,MAAf,UACE,6CACc,IACZ,wBACEC,QAAS,kBAAkBlB,GAAXD,EAAP,EADX,SAGGA,EAAW,mBAAqB,yBAGrC,0BACEoB,GAAG,MACHC,KAAK,MACLC,KAAK,IACLC,KAAK,KACLC,IAAKtB,EACLuB,SAAUnB,EACVoB,YAAa9B,IAGf,qBAAKsB,UAAU,WAAWC,QA1DX,WACjB,IAAIQ,EAAO/B,EACXC,EAAQC,GACRC,EAAM4B,GACN,IAAIC,EAAgBxB,EAAUI,QAAQC,MACtCL,EAAUI,QAAQC,MAAQP,EAASM,QAAQC,MAC3CP,EAASM,QAAQC,MAAQmB,EACzB1B,EAASM,QAAQqB,OAClB,EAkDG,SACE,cAAC,IAAD,CAAWT,GAAG,gBAEhB,0BACEA,GAAG,MACHC,KAAK,MACLC,KAAK,IACLC,KAAK,KACLE,SAAUnB,EACVwB,KAAK,OACLN,IAAKpB,EACLsB,YAAa5B,MAIpB,CC9ED,IAAMiC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC1C,EAAD,MAEFsC,E","file":"static/js/main.770fd736.chunk.js","sourcesContent":["import \"./styles.css\";\nimport React, { useEffect } from \"react\";\nimport { RefreshCw } from \"react-feather\";\n\nexport default function App() {\n  const [from, setFrom] = React.useState(\"encoded_url\");\n  const [to, setTo] = React.useState(\"decoded_url\");\n  const [compMode, setCompMode] = React.useState(false);\n  const inputRef = React.useRef();\n  const outputRef = React.useRef();\n\n  const handleSwap = () => {\n    var temp = from;\n    setFrom(to);\n    setTo(temp);\n    var previousValue = outputRef.current.value;\n    outputRef.current.value = inputRef.current.value;\n    inputRef.current.value = previousValue;\n    inputRef.current.focus();\n  };\n\n  useEffect(() => {\n    handleChange();\n  }, [compMode, from, to]);\n\n  const handleChange = () => {\n    if (from === \"encoded_url\") {\n      try {\n        const encoded_url = inputRef.current.value;\n        const decoded_url = compMode\n          ? decodeURIComponent(encoded_url)\n          : decodeURI(encoded_url);\n        outputRef.current.value = decoded_url;\n      } catch (e) {\n        console.log(\"Error_1\", e);\n      }\n    } else {\n      try {\n        const decoded_url = inputRef.current.value;\n        const encoded_url = compMode\n          ? encodeURIComponent(decoded_url)\n          : encodeURI(decoded_url);\n        outputRef.current.value = encoded_url;\n      } catch (e) {\n        console.log(\"Error_2\", e);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>\n        URL Decoder{\" \"}\n        <button\n          onClick={() => (compMode ? setCompMode(false) : setCompMode(true))}\n        >\n          {compMode ? \"uri component on\" : \"uri component off\"}\n        </button>\n      </h1>\n      <textarea\n        id=\"url\"\n        name=\"url\"\n        rows=\"8\"\n        cols=\"33\"\n        ref={inputRef}\n        onChange={handleChange}\n        placeholder={from}\n      ></textarea>\n\n      <div className=\"swap-btn\" onClick={handleSwap}>\n        <RefreshCw id=\"swap-icon\" />\n      </div>\n      <textarea\n        id=\"url\"\n        name=\"url\"\n        rows=\"8\"\n        cols=\"33\"\n        onChange={handleChange}\n        type=\"text\"\n        ref={outputRef}\n        placeholder={to}\n      ></textarea>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n// import swDev from \"./swDev\"\n// import * as serviceWorkerRegistration from \"./swDev\"\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n\n// serviceWorkerRegistration.register();\n// Uncomment before build to enable service worker.\n// swDev();"],"sourceRoot":""}