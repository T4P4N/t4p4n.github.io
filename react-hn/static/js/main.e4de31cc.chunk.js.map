{"version":3,"sources":["List.tsx","InputWithLabel.tsx","SearchForm.tsx","Shimmer.tsx","App.tsx","index.tsx"],"names":["Item","item","onRemoveItem","className","type","onClick","console","log","title","height","width","href","url","size","author","points","objectID","List","data","React","sortKey","is_rev","sort","setSort","sortFunction","NONE","list","TITLE","sortBy","AUTHOR","COMMENT","reverse","POINT","sortedList","handleSbt","isReverse","map","InputWithLabel","id","value","onInputChange","isFocused","children","inputRef","current","focus","htmlFor","onChange","SearchForm","searchTerm","onSearchInput","onSearchSubmit","onSubmit","disabled","Shimmer","PARAM_SEARCH","storiesReducer","state","action","isLoading","isError","payload","page","concat","filter","story","Error","extractSearchTerm","substring","lastIndexOf","replace","getUrl","App","key","initialState","localStorage","getItem","setValue","setItem","useSemiPersistentState","setSearchTerm","urls","setUrls","stories","dispatchStories","handleFetchStories","a","lastUrl","length","axios","get","result","hits","handleSearch","lastSearches","uniq","reduce","index","slice","getLastSearches","n","event","target","preventDefault","handleLastSearch","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.e4de31cc.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport { ChevronUp, User, X } from \"react-feather\";\r\nimport { sortBy } from \"lodash\";\r\nimport { Story, ListProps } from \"./Story\";\r\n\r\ntype ItemProps = {\r\n  item: Story;\r\n  onRemoveItem: (item: Story) => void;\r\n};\r\n\r\nconst Item = ({ item, onRemoveItem }: ItemProps) => {\r\n  const handleRemoveItem = () => {\r\n    onRemoveItem(item);\r\n    console.log(\"Removed --> \" + item.title);\r\n  };\r\n\r\n  return (\r\n    <div key={item.objectID} className=\"posts\">\r\n      <h4 className=\"title\">\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleRemoveItem}\r\n          data-testid=\"remove-btn\"\r\n        >\r\n          <X height=\"15px\" width=\"15px\" className=\"x-btn\" />\r\n        </button>\r\n        <a href={item.url}>{item.title}</a>\r\n      </h4>\r\n\r\n      <p className=\"author\" data-testid=\"author\">\r\n        <User size={14} /> {item.author}\r\n      </p>\r\n      <p className=\"points\">\r\n        <ChevronUp /> {item.points}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst List = ({ data, onRemoveItem }: ListProps) => {\r\n  // Sorting\r\n  const [sort, setSort] = React.useState({ sortKey: \"NONE\", is_rev: false });\r\n  // Sorting\r\n  const SORTS = {\r\n    NONE: (list: Story) => list,\r\n    TITLE: (list: Story) => sortBy(list, \"title\"),\r\n    AUTHOR: (list: Story) => sortBy(list, \"author\"),\r\n    COMMENT: (list: Story) => sortBy(list, \"num_comments\").reverse(),\r\n    POINT: (list: Story) => sortBy(list, \"points\").reverse()\r\n  };\r\n\r\n  const sortFunction = SORTS[sort.sortKey];\r\n  const sortedList = sort.is_rev\r\n    ? sortFunction(data).reverse()\r\n    : sortFunction(data);\r\n\r\n  const handleSbt = (sortKey: string) => {\r\n    const isReverse = sort.sortKey === sortKey && !sort.is_rev;\r\n    setSort({ sortKey: sortKey, is_rev: isReverse });\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setSort({ sortKey: \"NONE\", is_rev: false });\r\n  };\r\n  return (\r\n    <>\r\n      {sort.sortKey !== \"NONE\" ? (\r\n        <button className=\"rm-btn\" onClick={() => handleClear()}>\r\n          Remove Filter\r\n        </button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n\r\n      <div className=\"filters\">\r\n        <button\r\n          className={\r\n            !sort.is_rev && sort.sortKey === \"TITLE\"\r\n              ? \"sort-btn-active sort-btn-asc\"\r\n              : sort.is_rev && sort.sortKey === \"TITLE\"\r\n              ? \"sort-btn-active sort-btn-des\"\r\n              : \"sort-btn\"\r\n          }\r\n          onClick={() => handleSbt(\"TITLE\")}\r\n        >\r\n          Title\r\n        </button>\r\n\r\n        <button\r\n          className={\r\n            !sort.is_rev && sort.sortKey === \"AUTHOR\"\r\n              ? \"sort-btn-active sort-btn-asc\"\r\n              : sort.is_rev && sort.sortKey === \"AUTHOR\"\r\n              ? \"sort-btn-active sort-btn-des\"\r\n              : \"sort-btn\"\r\n          }\r\n          onClick={() => handleSbt(\"AUTHOR\")}\r\n        >\r\n          Author\r\n        </button>\r\n\r\n        <button\r\n          className={\r\n            !sort.is_rev && sort.sortKey === \"POINT\"\r\n              ? \"sort-btn-active sort-btn-asc\"\r\n              : sort.is_rev && sort.sortKey === \"POINT\"\r\n              ? \"sort-btn-active sort-btn-des\"\r\n              : \"sort-btn\"\r\n          }\r\n          onClick={() => handleSbt(\"POINT\")}\r\n        >\r\n          points\r\n        </button>\r\n\r\n        <button\r\n          className={\r\n            !sort.is_rev && sort.sortKey === \"COMMENT\"\r\n              ? \"sort-btn-active sort-btn-asc\"\r\n              : sort.is_rev && sort.sortKey === \"COMMENT\"\r\n              ? \"sort-btn-active sort-btn-des\"\r\n              : \"sort-btn\"\r\n          }\r\n          onClick={() => handleSbt(\"COMMENT\")}\r\n        >\r\n          comments\r\n        </button>\r\n      </div>\r\n\r\n      {sortedList.map((item: Story) => (\r\n        <Item key={item.objectID} item={item} onRemoveItem={onRemoveItem} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import * as React from \"react\";\r\n\r\ntype InputWithLabelProps = {\r\n  id: string;\r\n  value: string;\r\n  type?: string;\r\n  onInputChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n  isFocused?: boolean;\r\n  children: React.ReactNode;\r\n};\r\n\r\nconst InputWithLabel = ({\r\n  id,\r\n  value,\r\n  type = \"text\",\r\n  onInputChange,\r\n  isFocused,\r\n  children\r\n}: InputWithLabelProps) => {\r\n  const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n  React.useEffect(() => {\r\n    if (isFocused && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isFocused]);\r\n  // To fix these swiggly lines i think we gotta setup tsconfig\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>{children}</label>\r\n      &nbsp;\r\n      <input id={id} type={type} value={value} onChange={onInputChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputWithLabel;\r\n","import { Search } from \"react-feather\";\r\nimport { SearchFormProps } from \"./Story\";\r\nimport InputWithLabel from \"./InputWithLabel\";\r\n\r\nconst SearchForm = ({\r\n  searchTerm,\r\n  onSearchInput,\r\n  onSearchSubmit\r\n}: SearchFormProps) => (\r\n  <form onSubmit={onSearchSubmit}>\r\n    <InputWithLabel\r\n      id=\"search\"\r\n      value={searchTerm}\r\n      isFocused\r\n      onInputChange={onSearchInput}\r\n    >\r\n      {/* <strong>Search:</strong> */}\r\n    </InputWithLabel>\r\n    <button type=\"submit\" disabled={!searchTerm} className=\"search-btn\">\r\n      <Search height=\"20px\" width=\"20px\" className=\"search-btn\" />\r\n    </button>\r\n  </form>\r\n);\r\n\r\nexport default SearchForm;\r\n","const Shimmer = () => {\n  return (\n      <div className=\"post-container\">\n        <div className=\"shimmer-posts\">\n        <h4 className=\"shimmer-title shimmer\">111</h4>\n\n        <p className=\"shimmer-author shimmer\" data-testid=\"author\">\n            000\n        </p>\n        <p className=\"shimmer-points shimmer\">000</p>\n        </div>\n      </div>\n  );\n};\n\nexport default Shimmer;\n","import * as React from \"react\";\nimport axios from \"axios\";\n// import { act } from \"react-dom/test-utils\";\nimport { Heart } from \"react-feather\";\n// Prj files\nimport List from \"./List\";\nimport SearchForm from \"./SearchForm\";\nimport Shimmer from './Shimmer'\nimport { uniq } from \"lodash\";\n\nconst API_BASE = \"https://hn.algolia.com/api/v1/\";\nconst API_SEARCH = \"/search\";\nconst PARAM_SEARCH = \"query=\";\nconst PARAM_PAGE = \"page=\";\n\nconst useSemiPersistentState = (\n  key: string,\n  initialState: string\n): [string, (newValue: string) => void] => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value, key]);\n\n  return [value, setValue];\n};\ntype Story = {\n  objectID: string;\n  url: string;\n  title: string;\n  author: string;\n  num_comments: number;\n  points: number;\n  page: number;\n  list: Array<Story>;\n  concat: any;\n  filter: any;\n};\n\ntype StoriesState = {\n  page: number;\n  list?: Story;\n  data: Story;\n  isLoading: boolean;\n  isError: boolean;\n};\n\ninterface StoriesFetchInitAction {\n  type: \"STORIES_FETCH_INIT\";\n}\n\ninterface StoriesFetchSuccessAction {\n  type: \"STORIES_FETCH_SUCCESS\";\n  payload: Story | any;\n}\n\ninterface StoriesFetchFailureAction {\n  type: \"STORIES_FETCH_FAILURE\";\n}\n\ninterface StoriesRemoveAction {\n  type: \"REMOVE_STORY\";\n  payload: Story;\n}\n\ntype StoriesAction =\n  | StoriesFetchInitAction\n  | StoriesFetchSuccessAction\n  | StoriesFetchFailureAction\n  | StoriesRemoveAction;\n\nconst storiesReducer = (state: StoriesState, action: StoriesAction) => {\n  switch (action.type) {\n    case \"STORIES_FETCH_INIT\":\n      return {\n        ...state,\n        isLoading: true,\n        isError: false\n      };\n    case \"STORIES_FETCH_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: false,\n        data:\n          action.payload.page === 0\n            ? action.payload.list\n            : state.data.concat(action.payload.list),\n        page: action.payload.page\n      };\n    case \"STORIES_FETCH_FAILURE\":\n      return {\n        ...state,\n        isLoading: false,\n        isError: true\n      };\n\n    case \"REMOVE_STORY\":\n      return {\n        ...state,\n        data: state.data.filter(\n          (story: Story) => action.payload.objectID !== story.objectID\n        )\n      };\n\n    default:\n      throw new Error();\n  }\n};\n\n// replaces API_ENDPOINT TO Empty strings\nconst extractSearchTerm = (url: string) => {\n  return url\n    .substring(url.lastIndexOf(\"?\") + 1, url.lastIndexOf(\"&\"))\n    .replace(PARAM_SEARCH, \"\");\n};\n\nconst getUrl = (searchTerm: any, page: number) =>\n  `${API_BASE}${API_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}`;\n\nconst getLastSearches = (urls: Array<any>) => {\n  return uniq(\n    urls\n      .reduce((result, url, index) => {\n        const searchTerm = extractSearchTerm(url);\n\n        if (index === 0) {\n          return result.concat(searchTerm);\n        }\n\n        const previousSearchTerm = result[result.length - 1];\n\n        if (searchTerm === previousSearchTerm) {\n          return result;\n        } else {\n          return result.concat(searchTerm);\n        }\n      }, [])\n      .slice(-6)\n      .slice(0, -1)\n  );\n};\n\nconst App = () => {\n  const [searchTerm, setSearchTerm] = useSemiPersistentState(\"state\", \"\");\n\n  const [urls, setUrls] = React.useState([getUrl(searchTerm, 0)]);\n\n  const [stories, dispatchStories] = React.useReducer(storiesReducer, {\n    data: [],\n    page: 0,\n    isLoading: false,\n    isError: false\n  });\n\n  const handleFetchStories = React.useCallback(async () => {\n    dispatchStories({ type: \"STORIES_FETCH_INIT\" });\n\n    try {\n      const lastUrl = urls[urls.length - 1];\n      const result = await axios.get(lastUrl);\n\n      dispatchStories({\n        type: \"STORIES_FETCH_SUCCESS\",\n        payload: {\n          list: result.data.hits,\n          page: result.data.page\n        }\n      });\n    } catch {\n      dispatchStories({\n        type: \"STORIES_FETCH_FAILURE\"\n      });\n    }\n  }, [urls]);\n\n  React.useEffect(() => {\n    handleFetchStories();\n  }, [handleFetchStories]);\n\n  const handleRemoveStory = (item: Story) => {\n    dispatchStories({\n      type: \"REMOVE_STORY\",\n      payload: item\n    });\n  };\n\n  const handleSearchInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearch = (searchTerm: any, page: any) => {\n    setSearchTerm(searchTerm);\n    const url = getUrl(searchTerm, page);\n    setUrls(urls.concat(url));\n  };\n\n  const handleMore = () => {\n    // window.scrollTo({\n    //   top: 1000,\n    //   behavior: \"smooth\"\n    // });\n    const lastUrl = urls[urls.length - 1];\n    const searchTerm = extractSearchTerm(lastUrl);\n    handleSearch(searchTerm, stories.page + 1);\n  };\n\n  const handleSearchSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    handleSearch(searchTerm, 0);\n  };\n  // .filter removes any empty strings present in array\n  const lastSearches:Array<any> = getLastSearches(urls).filter((n: any) => n.length >= 1);\n  // const lastSearches = getLastSearches(urls);\n\n  const handleLastSearch = (searchTerm: any) => {\n    handleSearch(searchTerm, 0);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"main-head\">Hacker News</h1>\n\n      <SearchForm\n        searchTerm={searchTerm}\n        onSearchInput={handleSearchInput}\n        onSearchSubmit={handleSearchSubmit}\n      />\n      {/* Render only if user has searched once or more than once */}\n      {lastSearches.length > 0 ? (\n        <p className=\"recent-search\">\n          <span className=\"rs-head\">Recent Searches:</span>\n          {lastSearches.map((searchTerm: string, index: number) => (\n            <button\n              className=\"rs-btn\"\n              key={index}\n              type=\"button\"\n              onClick={() => handleLastSearch(searchTerm)}\n            >\n              {searchTerm}\n            </button>\n          ))}\n        </p>\n      ) : (\n        <></>\n      )}\n\n{stories.isError && <p>Something went wrong</p>}\n      {stories.isLoading ? (\n        [1,2,3,4,5].map((n) => <Shimmer key={n}/>)\n\n      ) : (\n        <></>\n      )}\n\n      <div className=\"post-container\">\n        <List data={stories.data} onRemoveItem={handleRemoveStory} />\n      </div>\n      {stories.isLoading ? (\n        <></>\n      ) : (\n        <>\n          <button type=\"button\" className=\"more-btn\" onClick={handleMore}>\n            load more\n          </button>\n        </>\n      )}\n\n      {stories.isLoading ? (\n        [1,2,3,4,5].map((n) => <Shimmer key={n}/>)\n      ) : (\n        <></>\n      )}\n      {/* Stick me to the bottom pls ^__^ */}\n      <footer>\n        <h3 className=\"footer\">\n          Made with <Heart /> by T4P4N\n        </h3>\n      </footer>\n    </div>\n  );\n};\n\nexport default App;\n","\nimport { render } from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}